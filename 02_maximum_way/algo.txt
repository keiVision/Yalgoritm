Задача повторяет аналогию "Cheapest Way", но решается с целью найти наибольшую стоимость маршрута

Сначала решается часть с вычислением стоимостей пути до каждого элемента
1. Принимаем на вход данные: строки и столбцы, далее строки заполняющие матрицу P с размерностью NxM.
2. Создаем нулевую матрицу E с размерностью MxN 
3. Первому элементу матрицы E присваиваем значение первого элемента матрицы P 
4. Считаем стоимости для первого ряда и первого столбца матрицы E.
5. Считаем стоимости для оставшихся элементов, выбирая наибольшую стоимость слева или сверху от вычисляемого элемента

Далее вычисляется маршрут.
1. Задаем позицию указателя - она равна последней строке и последнему столбцу (то есть правый нижний элемент)
2. Далее цикл, пока оба указателя не будут равны 0 (то есть мы не будем находится на левом верхнем элементе)
3. Внутри цикла проверяем условие: Если текущие указатели > 0, значит мы находимся НЕ на первой строке и НЕ на первой колонке
4. Для элементов из этого подмножества выполняем проверку:
    Сравниваем элемент слева от текущего (тот на котором указатель) и сверху от текущего
        Если верхний больше - пишем "D" и от указателя строки вычитаем 1, иначе "R" и вычитаем из указателя столбца.
    Иначе:
        Если указатель строки > 0 (уперлись в стену):
            Добавляем "D" и указатель строки минус 1
        Иначе (уперлись в потолок):
            Добавляем "R" и указатель столбца минус 1
5. Результат переворачиваем (так как шли от правого нижнего в левый верхний)