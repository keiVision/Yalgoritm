Создается класс Graph
    Класс инициализируется значениями: количество вершин, количество ребер и пустой список смежности
        представляющий пустой словарь.

    Создается метод ввода данных:
        Метод слушает инпут и записывает первую строку состояющую из двух чисел 
            0 < N <= 100000 и 0 <= M <= 100000, где N - количество вершин, а M - количество связей.
        Далее, итеративно от i == 0 до i == lenght(N) слушается инпут и записываются вершины в формате v1 v2, показывая их связь между собой.

    Создается структура "граф" - представляющая из себя список смежности:
        Метод создает незаполненный словарь, в котором N объектов содержащих пустое множество
        Далее метод заполняет пустые множества с двух сторон, то есть:
            Каждая вершина v1 заполняется вершиной v2, а каждая v2 - вершиной v1 
                Таким образом, список смежности содержит все ключи (представляют все вершины (без дупликатов)) и все связанные с ними вершины.

    Создается метод обхода графа (выбран итеративный dfs для обхода исключения с глубиной рекурсии (по умолчанию 1000))
        Метод работает по следующему алгоритму:
            1. Инициализируется с : 
                vertex - стартовая точка для обхода
                visited - пустое множество будущих вершин которые были посещены
                components - пустой список будущих компонент связности
            2. Создается стэк, который будет хранить в себе все НЕ посещенные вершины и сразу заполняется первой вершиной
            3. Итеративно, пока стэк НЕ пуст, выполняется следующее:
                - Выбирается вершина из списка стэка
                - Проверяется, есть-ли эта вершина в множестве visited
                - Если вершины там нет, внутри цикла множество visited дополняется этой вершиной и создается компонента component
                - В конце цикла стэк расширяется, добавляя в него всех соседей текущей ноды (вершины)
            
    Создается метод поиска связных компонент
        Внутри метода создается пустое множество visited, пустой список components
        Далее, итеративно по каждой вершине из всего количества вершин N, выполняется:
            - Если вершины нет в списке visited, создается пустая компонента component
            - Выполняется dfs 
            - Заполняется component которая определена внутри метода dfs 
    
